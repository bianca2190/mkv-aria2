name: Bangun Dan Dorong Gambar Docker   # Nama alur kerja, dapat dilihat semua alur kerja di halaman utama proyek Github di 【Actions】

on: # Konfigurasikan acara yang memicu alur kerja
  push:
    tags: # alur kerja ini dipicu ketika tag diperbarui
      - 'v*' # Pemicu tag cocok dengan v*, misalnya v1.0, v20.15.10
  workflow_dispatch:

# Tentukan variabel lingkungan, yang akan digunakan nanti
# Tentukan APP_NAME untuk build-args docker
# Tentukan DOCKERHUB_REPO untuk menandai nama repo docker hub
env:
  APP_NAME: aria2bot
  DOCKERHUB_REPO: mkv28/aria2bot

jobs:
  main:
    # Berjalan pada Ubuntu
    runs-on: ubuntu-latest
    steps:
      # Checkout kode dari repositori
      - name: Checkout
        uses: actions/checkout@v3.5.3

      # Setel zona waktu
      - name: Setup timezone
        uses: zcong1993/setup-timezone@v2.0.0
        with:
          timezone: Asia/Jakarta

      # Login ke DockerHub
      - name: Login ke DockerHub
        uses: docker/login-action@v2
        with:
          # Informasi kunci login docker hub ditambahkan di GitHub Repo => Settings => Secrets
          # DOCKERHUB_USERNAME adalah nama akun docker hub.
          # DOCKERHUB_TOKEN: dibuat di docker hub => Account Setting => Security.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Setel QEMU, yang dibutuhkan oleh docker buildx.
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2.2.0

      # Setel Docker buildx, untuk memungkinkan pembuatan gambar Multi platform
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.8.0

      # Dapatkan informasi tag saat ini melalui perintah git, dan simpan ke variabel lingkungan APP_VERSION
      - name: Generate App Version
        run: echo APP_VERSION=`git describe --tags --always` >> $GITHUB_ENV

      # Bangun dan dorong gambar Docker ke Docker hub
      - name: Bangun dan dorong gambar Docker
        id: docker_build
        uses: docker/build-push-action@v4.1.1
        with:
          network: host
          # Apakah untuk mendorong docker
          push: true
          # Menghasilkan gambar multi platform
          platforms: linux/amd64,linux/arm64
          # argumen build docker, menginjeksikan APP_NAME/APP_VERSION
          build-args: |
            APP_NAME=${{ env.APP_NAME }}
            APP_VERSION=${{ env.APP_VERSION }}
          # Menghasilkan dua tag docker: ${APP_VERSION} dan latest
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ env.APP_VERSION }}          
            ${{ env.DOCKERHUB_REPO }}:latest
